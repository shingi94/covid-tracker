{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","console","log","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","url","fetchData","country","a","changableUrl","axios","get","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Charts","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","image","src","coronaImage","alt","Chart","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0d398a19.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__joH_a\",\"card\":\"Cards_card__2OSs7\",\"infected\":\"Cards_infected__xXME8\",\"recovered\":\"Cards_recovered__2t1KT\",\"deaths\":\"Cards_deaths__YEWDj\"};","import React from 'react';\r\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core';\r\nimport styles from './Cards.module.css'; \r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\nconst Cards = ({data:{confirmed, recovered, deaths, lastUpdate}}) =>{\r\n    console.log(confirmed);\r\n    if(!confirmed){\r\n        return 'Loading...';\r\n\r\n    }\r\n    \r\n    \r\n    return (\r\n    <div className= {styles.container}>\r\n        <Grid container spacing={3} justify=\"center\">\r\n            <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\r\n                    <Typography variant=\"h5\">\r\n                        <CountUp start = {0} end = {confirmed.value} duration ={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                    <Typography variant=\"body2\">Number of recoveries from COVID-19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n            <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start = {0} end = {recovered.value} duration ={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                        {new Date(lastUpdate).toDateString()}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n            <Grid item component = {Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\r\n                <CardContent>\r\n                    <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\r\n                    <Typography variant=\"h5\">\r\n                    <CountUp start = {0} end = {deaths.value} duration ={2.5} separator=\",\"/>\r\n                    </Typography>\r\n                    <Typography color=\"textSecondary\">\r\n                    {new Date(lastUpdate).toDateString()}\r\n                    </Typography>\r\n                    <Typography variant=\"body2\">Number of deaths caused by COVID-19</Typography>\r\n                </CardContent>\r\n\r\n            </Grid>\r\n\r\n        </Grid>\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchData = async (country) =>{\r\n    let changableUrl = url;\r\n\r\n    if(country){\r\n        changableUrl= `${url}/countries/${country}`\r\n    }\r\n    try{\r\n        const {data : {confirmed, recovered, deaths, lastUpdate}} = await axios.get(changableUrl);\r\n\r\n        \r\n        return {confirmed, recovered, deaths, lastUpdate,} ;\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n\r\n    }\r\n\r\n}\r\n\r\nexport const fetchDailyData = async () =>{\r\n    try{\r\n        const {data}= await axios.get(`${url}/daily`);\r\n        \r\n        const modifiedData = data.map((dailyData) =>({\r\n            confirmed: dailyData.confirmed.total,\r\n            deaths: dailyData.deaths.total,\r\n            date: dailyData.reportDate,\r\n        }));\r\n\r\n        return modifiedData;\r\n\r\n    }catch(error){\r\n        console.log(error);\r\n\r\n    }\r\n}\r\n\r\nexport const fetchCountries = async () =>{\r\n    try{\r\n        const {data:{countries}} = await axios.get(`${url}/countries`);\r\n        return countries.map((country)=>country.name);\r\n\r\n    } catch (error){\r\n        console.log(error);\r\n\r\n    }\r\n}","import React, {useState, useEffect} from 'react';\r\nimport {fetchDailyData} from '../../api';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Charts = ({data: {confirmed, deaths, recovered}, country}) =>{\r\n    const [dailyData, setDailyData] = useState([]);\r\n\r\n    useEffect(() =>{\r\n        const fetchAPI = async () =>{\r\n            setDailyData(await fetchDailyData());\r\n        }\r\n        //console.log(dailyData);\r\n        fetchAPI();\r\n\r\n    }, [dailyData]);\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n         ? (\r\n         <Line \r\n        data = {{\r\n            labels: dailyData.map(({date})=> date),\r\n            datasets: [{\r\n                data: dailyData.map(({confirmed})=> confirmed),\r\n                label: 'Infected',\r\n                borderColor: '#3333ff',\r\n                fill:true,\r\n            }, {\r\n                data: dailyData.map(({deaths})=> deaths),\r\n                label: 'Deaths',\r\n                borderColor: 'red',\r\n                backgroundColor: 'rgba(255, 0, 0 , 0.5)',\r\n                fill:true,\r\n            }],\r\n        }}\r\n        />) : null\r\n\r\n    );\r\n\r\n    //console.log(confirmed, recovered, deaths);\r\n\r\n    const barChart = (\r\n        confirmed\r\n        ? (\r\n            <Bar\r\n            data= {{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [{\r\n                    label: 'People',\r\n                    backgroundColor: [\r\n                        'rgba(0, 0, 255, 0.5)',\r\n                        'rgba(0, 255, 0, 0.5)',\r\n                        'rgba(255, 0, 0, 0.5)',\r\n                    ],\r\n                    data: [confirmed.value, recovered.value, deaths.value]\r\n                }]\r\n            }}\r\n            options = {{\r\n                legend: {display : false},\r\n                title: {display: true}, text: `Current state in ${country}`\r\n            }}\r\n             />\r\n        ): null\r\n\r\n    );\r\n\r\n    return (\r\n    <div className= {styles.container}>\r\n        {country ? barChart: lineChart}\r\n\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, {useState, useEffect} from 'react';\r\nimport {NativeSelect, FormControl} from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\nimport {fetchCountries} from '../../api';\r\n\r\nconst CountryPicker = ({handleCountryChange}) =>{\r\n    const [fetchedCountries, setFetchedCountries] = useState([]);\r\n\r\n\r\n    useEffect(()=>{\r\n        const fetchAPI = async () =>{\r\n            setFetchedCountries(await fetchCountries());\r\n            \r\n        }\r\n        fetchAPI();\r\n    }, [setFetchedCountries]);\r\n      \r\n    \r\n    return (\r\n        <FormControl className = {styles.formControl}>\r\n            <NativeSelect defaultValue=\"\" onChange={(e)=>handleCountryChange(e.target.value)}>\r\n                <option value=\"\">Global</option>\r\n                {fetchedCountries.map((country, i)=><option key={i} value = {country}>{country}</option>)}\r\n            </NativeSelect>\r\n        </FormControl>\r\n    \r\n    )\r\n}\r\n\r\nexport default CountryPicker;","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React from 'react';\r\n\r\n//import Cards from './components/Cards/Cards';\r\n//import Chart from './components/Chart/Chart';\r\n//import CountryPicker from './components/CountryPicker/CountryPicker';\r\n\r\nimport {Cards, Chart, CountryPicker} from './components';\r\nimport styles from './App.module.css';\r\nimport {fetchData} from './api';\r\n\r\n\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends React.Component {\r\n\r\n\r\n    state = {\r\n        data: {},\r\n        country: '',\r\n    }\r\n    async componentDidMount() {\r\n\r\n        const fetchedData = await fetchData();\r\n\r\n        this.setState({data: fetchedData});\r\n\r\n        \r\n        }\r\n        handleCountryChange = async (country) =>{\r\n            const fetchedData = await fetchData(country);\r\n            this.setState({data: fetchedData, country:country});\r\n            \r\n\r\n\r\n    }\r\n    render(){\r\n        const {data, country} = this.state;\r\n        return(\r\n            <div className= {styles.container}>\r\n                <img className = {styles.image} src= {coronaImage} alt=\"COVID-19\"/>\r\n                <Cards data = {data}/>\r\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\r\n                <Chart data= {data} country={country}/>\r\n                \r\n                \r\n            \r\n\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2hH6S\",\"image\":\"App_image__yVZyV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__3n2bm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__urMWM\"};"],"sourceRoot":""}